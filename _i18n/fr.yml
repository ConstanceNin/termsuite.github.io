site:
  email: "[prenom.nom]@univ-nantes.fr"
  description: "TermSuite est une librairie Java permettant l'<strong>extraction terminologique</strong> et l'<strong>alignment multilingue de termes</strong>."
  title: TermSuite

authors:
  dcram:
    description: "Ingénieur de Recherche - Université de Nantes - Project ISTEX"
    role: "Ingénieur"
    link_type: "Github"
  bdaille:
    description: "Professeur des Universités - Université de Nantes - Project ISTEX"
    role: "Chercheur"
    link_type: "Personal Page"

global:
  french: Français
  english: Anglais
  latvian: Letton
  russian: Russe
  german: Allemand
  spanish: Espagnol
  danish: Danois
  chinese: Chinois
  poor: Faible
  good: Bon
  download: Download
  changelog: Change log
  getting_started: Getting Started
  documentation: Documentation
  developers: Developers
  user_manual: User Manual
  view_on_github: View on Github
  about: About
  about_termsuite: About TermSuite
  blog: Blog
  contact: Contact
  support: Support
  links: Links
  university_of_nantes: University of Nantes
  fork_termsuite_on_github: Fork TermSuite on GitHub.
  toggle_nav: Toggle navigation
  share_on: Share on

index:
  good_support: Bon support
  partial_support: Support partiel
  main_features: >
    Multiword and compound term detection, morphosyntactic analysis, term variant detection,
     term specificity computation, etc. <small><a href="#features">See features</a></small>

  download_last_stable: Download last stable version of TermSuite.
  see_changelog: See Changelog
  download_last_snapshot: or download last development snapshot
  get_it_running: Get it running
  get_it_running_desc: Prepare your system for TermSuite, download, install and get it running on an example corpus quickly.
  documentation_desc: List of all TermSuite's features, analysis engines, and configuration parameters. Java API.
  developers_desc: Build it from sources with Gradle, or use it as a maven dependency.
  features_overview: Features Overview

contact:
  description: TermSuite is a research project.

features:
  word_tokenization: Word tokenization
  postagging: "POS Tagging (3rd party: with TreeTagger or Mate)"
  lemmatization: "Lemmatization (3rd party: with TreeTagger or Mate)"
  stemming: Stemming (Snowball)
  terminology_extraction: Terminology extraction
  mwt_detection: Efficient multiword term detection
  syntactic_variant_detection: Term syntactic variants detection
  graphical_variant_detection: Term graphic variants detection
  semantic_variant_detection: Term semantic variants detection (to come in 2.2)
  morphology: Term morphology extraction
  morphosyntactic_variant_detection: Term morphosyntactic variants detection
  specificity: "Term specificity (Weirdness Ratio) computing and other term measures: WR log, term frequency, etc"
  alignment: Term alignment (distributional and compositional, multilingual and monolingual)
  export: "Terminology export in multiple formats: `json`, `tsv`, `tbx`"

filtering_properties:
  pilot: the most frequent form of term
  frequency: the number of occurrences of a term
  fnorm: the normalized frequency
  generalFnorm: the general normalized frequency
  dfreq: the number of document in corpus that contain the term
  lemma: the concatenation of word lemmas
  groupingKey: the term grouping key, i.e. the term *id* (pattern + lemma)
  wr: the weirdness ratio (the specificity)
  wrLog: the log of weirdness ratio
  pattern: the syntactic pattern of the term
  spottingRule: the *UIMA Tokens Regex* rule name that spotted the term
  termClassHead: the class the term belongs to
  termClassFrequency: the frequency of the term class


titles:
  blog: "Blog & Actualités"
  introduction: Introduction à TermSuite
  getting-started: "Débuter avec TermSuite [Tutoriel]"
  postagger: Installer l'étiquetteur grammatical et le lemmatiseur
  command-line-api: Executer l'extraction de terminologies en ligne de commande API
  java-api: API Java de TermSuite
  resources: Charger les ressources langagières de TermSuite
  corpus: Arborescence d'un corpus TermSuite
  term-properties: Liste des propriétés de terme disponibles dans TermSuite.
  developers: Instructions pour les développeurs (Gradle / Maven)
  support: Assistance
  data-model: Modèle de données de TermSuite
  about: À propos de TermSuite

menus:
  blog:
  introduction: Introduction
  getting-started: "Débuter avec TermSuite [Tutoriel]"
  postagger: Installer un étiquetteur grammatical
  command-line-api: API ligne de commande
  java-api: API Java
  resources: Ressources
  corpus: Arborescence corpus
  term-properties: Propriétés de terme
  developers: Développeurs (Gradle / Maven)
  data-model: Modèle de données
  support: Assistance


excerpts:
  blog:
  introduction: "Manuel d'utilisation et documentation technique pour TermSuite : terminologie de l'extraction et alignement bilingue."
  getting-started: Cette page vous montre les étapes pour faire fonctionner TermSuite et extraire la terminologie d'un petit corpus.
  postagger: Documentation pour l'installation de l'étiqueteur arboré (TreeTagger) ou de l'étiquetteur grammatical Mate (POS tagger) pour TermSuite.
  command-line-api: Documentation concernant l'execution de l'extraction, et l'alignement bilingue en ligne de commande.
  java-api: Documentation et execution de l'extraction de terminologie, et de l'alignement bilingue depuis l'API Java.
  resources: Liste et documentation des ressources linguistiques nécessaires pour TermSuite.
  corpus: "Documentation pour préparer votre corpus à TermSuite."
  term-properties: Liste des propriétés de terme disponibles dans TermSuite.
  developers: "Informations pour les développeurs : Gradle, Github, Maven..."
  support: Obtenir de l'aide avec TermSuite
  data-model:

authors:
  dc:
    description: Ingénieur de Recherche CNRS - Université de Nantes - Projet ISTEX
    role: Conception / Développement
    link_type: Github
  bd:
    description: Professeur des universités - Université de Nantes - France
    role: Recherche
    link_type: Page personnelle
